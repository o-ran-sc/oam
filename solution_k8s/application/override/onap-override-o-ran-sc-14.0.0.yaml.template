# Copyright Â© 2019 Amdocs, Bell Canada
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###################################################################
# This override file enables helm charts for all ONAP applications.
###################################################################
#ingress virtualhost based configuration
#ingress virtualhost based configuration
global:
  masterPassword: secretpassword
  cluster-issuer: &cluster-issuer selfsigned-cluster-issuer
  #cluster-issuer: &cluster-issuer acme-issuer
  
  ingress:
    enabled: true
    # enable all component's Ingress interfaces
    enable_all: true
    # All http requests via ingress will be redirected
    # Provider: ingress, istio, gw-api
    provider: ingress
    # Ingress class (only for provider "ingress"): e.g. nginx, traefik
    ingressClass: nginx
    # Ingress Selector (only for provider "istio") to match with the
    # ingress pod label "istio=ingress"
    ingressSelector: ingress
    # optional: common used Gateway (for Istio, GW-API) and listener names
    commonGateway:
      name: ""
      httpListener: ""
      httpsListener: ""
    virtualhost:
      # Default Ingress base URL
      # can be overwritten in component by setting ingress.baseurlOverride
      baseurl: &baseurl ${DOMAIN}
      # prefix for baseaddr
      # can be overwritten in component by setting ingress.preaddrOverride
      preaddr: ""
      # postfix for baseaddr
      # can be overwritten in component by setting ingress.postaddrOverride
      postaddr: ""
    #config:
      #ssl: "redirect"
    # you can set an own Secret containing a certificate
    #  tls:
    #    secret: 'my-ingress-cert'
    # optional: Namespace of the Istio IngressGateway
    # namespace: istio-ingress
  
  # don't need ejbca server
  addTestingComponents: &testing false
  centralizedLoggingEnabled: &centralizedLogging false
  
  # Disabling CMPv2
  cmpv2Enabled: false
  
  aafEnabled: false
  # disable TLS on pod/service level
  tlsEnabled: false
  # common global images
  drProvClientImage: onap/dmaap/datarouter-prov-client:2.1.15

cassandra:
  enabled: false
mariadb-galera:
  enabled: true
  replicaCount: 1
  mariadbOperator:
    appVersion: 11.1.2
    persistence:
      storageClassName: onap-mariadb-data
      size: 3Gi
    galera:
      enabled: false
postgres:
  enabled: false
aaf:
  enabled: false
  aaf-sms:
    cps:
      # you must always set the same values as value set in cps.enabled
      enabled: true
aai:
  enabled: false
cds:
  enabled: false
cli:
  enabled: false
# Today, "contrib" chart that hosting these components must also be enabled
# in order to make it work. So `contrib.enabled` must have the same value than
# addTestingComponents
contrib:
  enabled: *testing
consul:
  enabled: false
cps:
  enabled: false
dcaegen2:
  enabled: false
dcaegen2-services:
  enabled: true
  dcae-datafile-collector:
    enabled: true
  dcae-datalake-admin-ui:
    enabled: false
  dcae-datalake-des:
    enabled: false
  dcae-datalake-feeder:
    enabled: false
  dcae-heartbeat:
    enabled: false
  dcae-hv-ves-collector:
    enabled: false
  dcae-kpi-ms:
    enabled: false
  dcae-ms-healthcheck:
    enabled: true
  dcae-pm-mapper:
    enabled: true
  dcae-pmsh:
    enabled: false
  dcae-prh:
    enabled: false
  dcae-restconf-collector:
    enabled: false
  dcae-slice-analysis-ms:
    enabled: false
  dcae-snmptrap-collector:
    enabled: false
  dcae-son-handler:
    enabled: false
  dcae-tcagen2:
    enabled: false
  dcae-ves-collector:
    enabled: true
    ingress:
      config:
        ssl: dontuse
        tls:
          secret: dcae-ves-tls
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: *cluster-issuer
      service:
      - baseaddr: "dcae-ves-collector"
        name: "dcae-ves-collector"
        port: 8080
    applicationConfig:
      auth.method: "noAuth"
  dcae-ves-mapper:
    enabled: true
  dcae-ves-openapi-manager:
    enabled: false
holmes:
  enabled: false
dmaap:
  enabled: true
  message-router:
    enabled: true
  dmaap-bc:
    enabled: false
  dmaap-dr-prov:
    enabled: true
  dmaap-dr-node:
    enabled: true
oof:
  enabled: false
msb:
  enabled: false
multicloud:
  enabled: false
nbi:
  enabled: false
platform:
  enabled: true
  chartmuseum:
    enabled: true
  oom-cert-service:
    enabled: false
  cmpv2-cert-service:
    enabled: false
  keycloak-init:
    enabled: false
  oauth2-proxy:
    enabled: false
policy:
  enabled: false
portal:
  enabled: false
robot:
  enabled: true
sdc:
  enabled: false
sdnc:
  enabled: true
  elasticsearch:
    enabled: false
  replicaCount: 1
  mysql:
    replicaCount: 1
  ueb-listener:
    enabled: false
  sdnc-ansible-server:
    enabled: false
  dgbuilder:
    enabled: false
  cds:
    enabled: false
  dmaap-listener:
    enabled: false
  network-name-gen:
    enabled: false
  config:
    odlPassword: admin
    sdnr:
      enabled: true
      # mode: web - SDNC contains device manager only plus dedicated webserver service for ODLUX (default),
      # mode: dm - SDNC contains sdnr device manager + ODLUX components
      mode: dm
      # sdnronly: true starts sdnc container with odl and sdnrwt features only
      sdnronly: true
      sdnrdbTrustAllCerts: true
      mountpointRegistrarEnabled: true
      mountpointStateProviderEnabled: true
      netconfCallHome:
        enabled: true
      kafka:
        enabled: true
      # vesCollector:
      #   enabled: true
      #   tls:
      #     enabled: true
      #   trustAllCertificates: true
      #   username: sample1
      #   password: sample1
      #   address: dcae-ves-collector.onap
      #   port: 8443
      #   eventLogMsgDetail: LONG
      mariadb:
        ## for legacy eleasticsearch database
        # enabled: false
        enabled: true
  sdnc-web:
    ingress:
      config:
        ssl: dontuse
        tls:
          secret: sdnc-web-tls
      service:
      - baseaddr: "sdnc-web"
        name: "sdnc-web"
        port: 8080
        plain_port: 8080
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: *cluster-issuer

so:
  enabled: false
strimzi:
  enabled: true
  config:
    advertizedPortBroker0: &advertizedPortBroker0 9000
    advertizedPortBroker1: &advertizedPortBroker1 9001
    advertizedPortBroker2: &advertizedPortBroker2 9002

  ingress:
    enabled: false
    service:
    - baseaddr: "kafka-bootstrap-api"
      name: "onap-strimzi-kafka-external-bootstrap"
      port: 9094
      exposedPort: 9010
      exposedProtocol: TLS
    - baseaddr: "kafka-0-api"
      name: "onap-strimzi-kafka-0"
      port: 9094
      exposedPort: *advertizedPortBroker0
      exposedProtocol: TLS
    - baseaddr: "kafka-1-api"
      name: "onap-strimzi-kafka-1"
      port: 9094
      exposedPort: *advertizedPortBroker1
      exposedProtocol: TLS
    - baseaddr: "kafka-2-api"
      name: "onap-strimzi-kafka-2"
      port: 9094
      exposedPort: *advertizedPortBroker2
      exposedProtocol: TLS


  replicaCount: 1
  strimzi-kafka-bridge:
    enabled: false
uui:
  enabled: false
vfc:
  enabled: false
vnfsdk:
  enabled: false
modeling:
  enabled: false
a1policymanagement:
  enabled: false
